<Shape id="EREntity_V002" displayName="Entity w/ attributes" icon="icons/entityWithAttributes.png">
    <Properties>
        <PropertyGroup name="Entity Properties">
            <Property name="box" type="Dimension">120,60</Property>
            <Property name="fillColor" displayName="Background Color" type="Color"><E>$$defaultBackgroundColor</E></Property>
            <Property name="strokeColor" displayName="Line Color" type="Color"><E>$$defaultStrokeColor</E></Property>
            <Property name="strokeStyle" displayName="Line Style" type="StrokeStyle"><E>$$defaultNodeStrokeStyle</E></Property>
            <Property name="HNDLcornerRadius" p:minX="10" p:maxX="50" p:lockY="true" displayName="Corner Radius" type="Handle"><E>$$defaultCornerRadius + ",0"</E></Property>
            <Property name="TTXTclassname" displayName="Entity Name"
              p:editInfo="({targetName: 'textClassName', bound: Bound.fromBox($box), font: $textFont, align: $ALGNtextAlignment, multi: true})" 
              type="PlainText" />
            <Property name="textColor" displayName="Text Color" type="Color"><E>$$defaultTextColor</E></Property>
            <Property name="textFont" displayName="Font" type="Font"><E>$$defaultTextFont</E></Property>
            <Property name="ALGNtextAlignment" displayName="Text Alignment" type="Alignment">1,1</Property>
        </PropertyGroup>
        <PropertyGroup name="Attributes Properties">
            <Property name="ENUMshowCompartments"  displayName="Show Attributes" 
                p:enumValues="['none|No', 'attr|Yes']"
                type="Enum">attr</Property>
            <Property name="HNDLposClassCompASeparator" p:disabled="$ENUMshowCompartments.value == 'none'" 
              displayName="Attribute Position" 
              p:minX="5" p:maxX="$box.w-20" p:minY="20" p:maxY="$box.h-20"
              type="Handle">20,30</Property>
            <Property name="TTXTattributes" displayName="Attributes" p:disabled="$ENUMshowCompartments.value == 'none'"
              p:editInfo="({targetName: 'textAttributes', bound: Bound.fromBox($box), font: $textFont, align: $ALGNcompTextAlignment, multi: true})" 
              type="PlainText" />
            <Property name="COLRcompTextColor" displayName="Text Color" type="Color"><E>$$defaultTextColor</E></Property>
            <Property name="FONTcompTextFont" displayName="Font" type="Font">Sans|normal|normal|10px</Property>
            <Property name="ALGNcompTextAlignment" displayName="Compartment Text Alignment" type="Alignment">0,0</Property>
        </PropertyGroup>
    </Properties>
    <Behaviors>
        <For ref="rect">
            <Box>$box</Box>
            <StrokeColor>$strokeColor</StrokeColor>
            <StrokeStyle>$strokeStyle</StrokeStyle>
            <Fill>$fillColor</Fill>
            <Radius>
                <Arg>$HNDLcornerRadius.x</Arg>
                <Arg>$HNDLcornerRadius.x</Arg>
            </Radius>
        </For>
        <For ref="textClassName">
            <DomContent>F.buildTextWrapDomContent(F._target, $TTXTclassname.value, $box.w - $textFont.getPixelHeight(), $ALGNtextAlignment)</DomContent>
            <Font>$textFont</Font>
            <Fill>$textColor</Fill>
            <BoxFit>
                <Arg>new Bound(3, 3, $box.w - 6, $ENUMshowCompartments.value == 'none' ? $box.h - 6 : $HNDLposClassCompASeparator.y - 6)</Arg>
                <Arg>$ALGNtextAlignment</Arg>
            </BoxFit>
        </For>
        <For ref="textAttributes">
            <DomContent>F.buildTextWrapDomContent(F._target, $TTXTattributes.value, $box.w - $HNDLposClassCompASeparator.x  - $textFont.getPixelHeight(), $ALGNcompTextAlignment)</DomContent>
            <Font>$FONTcompTextFont</Font>
            <Fill>$COLRcompTextColor</Fill>
            <BoxFit>
                <Arg>new Bound($HNDLposClassCompASeparator.x, $HNDLposClassCompASeparator.y, $box.w - $HNDLposClassCompASeparator.x - 5, Math.abs($box.h - $HNDLposClassCompASeparator.y))</Arg>
                <Arg>$ALGNcompTextAlignment</Arg>
            </BoxFit>
            <Visibility>$ENUMshowCompartments.value != 'none'</Visibility>
        </For>

    </Behaviors>
    <Actions>
        <Action id="getConnectorOutlets">
            <Impl>
                <![CDATA[
                  var box = this.getProperty("box");
                  return [
                    new Outlet("top-left", "Bounding", box.w / 4, 0),
                    new Outlet("top-center", "Bounding", box.w / 2, 0),
                    new Outlet("top-right", "Bounding", 3 * box.w / 4, 0),
                    new Outlet("left-top", "Bounding", 0, box.h / 4),
                    new Outlet("left-center", "Bounding", 0, box.h / 2),
                    new Outlet("left-bottom", "Bounding", 0, 3 * box.h / 4),
                    new Outlet("bottom-left", "Bounding",  box.w / 4, box.h),
                    new Outlet("bottom-center", "Bounding", box.w / 2, box.h),
                    new Outlet("bottom-right", "Bounding", 3 * box.w / 4, box.h),
                    new Outlet("right-top", "Bounding", box.w, box.h / 4),
                    new Outlet("right-center", "Bounding", box.w, box.h / 2),
                    new Outlet("right-bottom", "Bounding", box.w, 3 * box.h / 4)
                ]
                ]]>
            </Impl>
        </Action>
    </Actions>
    <p:Content xmlns:p="http://www.evolus.vn/Namespace/Pencil"
               xmlns="http://www.w3.org/2000/svg">
        <rect id="rect" x="0" y="0" />
        <text id="textClassName"  xml:space="preserve" />
        <text id="textAttributes"  xml:space="preserve" />

    </p:Content>
</Shape>
